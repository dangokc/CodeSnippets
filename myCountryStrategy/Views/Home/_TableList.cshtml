@using Amaris.Select2.HtmlHelpers
@using Amaris.XEditable.Extensions
@model CountryStrategy.Models.Partial.OcpModelView
@using System.Globalization

<table class="table table-bordered" id="co_list" data-url="@Url.Action("GetTableList", "Home")">
    <thead>
        <tr>
            <td colspan="10">
                @Html.Modal(Url.Action("AddOcpModal", "Home"), "plus", "Add Country Opening Priority", null, new ModalOptions { Target = "#modal-lg", ButtonStyle = "btn btn-sm btn-success" })
                <i class="pull-right">@Model.LstOpeningCountryPriority.Count() result@(@Model.LstOpeningCountryPriority.Count() > 1 ? "s" : "")</i>
            </td>            
        </tr>
        <tr class="bg-primary" id="header-row">            
            <th style="width: 9%;">
                <div class="">
                    <span class="" style="float: left; margin: 5px 5px;">Priority Order</span>
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-default btn-sm pull-right" id="priorityOrderBtn"
                                data-url="@Url.Action("SortByPriorityOrder", "Home")">
                            <i class="fa fa-sort-alpha-asc"></i>
                        </button>
                    </span>
                </div>
            </th>
            <th style="width: 8%;">
                <div class="">
                    <span class="" style="float: left; margin: 5px 5px;">Priority</span>
                    <span class="input-group-btn">
                        <button type="submit" class="btn btn-default btn-sm pull-right" id="priority"
                                data-url="@Url.Action("SortByPriority", "Home")">
                            <i class="fa fa-sort-alpha-asc"></i>
                        </button>
                    </span>
                </div>
            </th>
            <th style="width: 10%;">
                <span class="" style="float: left; margin: 5px 5px;">Country</span>
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-default btn-sm pull-right" id="country"
                            data-url="@Url.Action("SortByCountry", "Home")">
                        <i class="fa fa-sort-alpha-asc"></i>
                    </button>
                </span>
            </th>
            <th style="width: 8%;">
                <span class="" style="float: left; margin: 5px 5px;">Deadline</span>
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-default btn-sm pull-right" id="deadline"
                            data-url="@Url.Action("SortByDeadline", "Home")">
                        <i class="fa fa-sort-alpha-asc"></i>
                    </button>
                </span>
            </th>
            <th style="width: 7%;">
                <span class="" style="float: left; margin: 5px 5px;">Deadline Type</span>
            </th>
            <th style="width: 10%;">
                <span class="" style="float: left; margin: 5px 5px;">Director</span>
            </th>
            <th style="width: 10%;">
                <span class="" style="float: left; margin: 5px 5px;">AFM</span>
            </th>
            <th style="width: 10%;">
                <span class="" style="float: left; margin: 5px 5px;">CorpDev</span>
            </th>
            <th style="width: 30%;">
                <span class="" style="float: left; margin: 5px 5px;">Comment</span>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.LstOpeningCountryPriority)
        {
            <tr>
                <td>
                    @(Html.XEditable(item, i => i.PriorityOrder, i => i.PriorityId,
                    Url.Action("UpdateOrderOnPriority", "Home"),
                    null, null,
                    new XEditableOptions
                    {
                        AllowClear = true,
                        OnSave = "onChange"
                    }))
                </td>
                <td>
                    @(  (item.PriorityTypeId != null)
                        Html.XEditable(item, i => i.PriorityTypeId, i => i.PriorityId,
                        Url.Action("UpdatePriority", "Home"),
                        Url.Action("GetPriorityTypeList", "Home"),
                        item.PriorityType.PriorityTypeName,
                        new XEditableOptions { AllowClear = true })
                        )
                    )
                </td>




                <td>
                    @(  (item.CountryId != null)
                        ? Html.XEditable(item, i => i.CountryId, i => i.PriorityId, Url.Action("UpdatePriority", "Home"), Url.Action("GetCountryList", "Home"), item.Country.Label, new XEditableOptions { AllowClear = true })
                        : Html.XEditable(item, i => i.CountryId, i => i.PriorityId, Url.Action("UpdatePriority", "Home"), Url.Action("GetCountryList", "Home"), null, new XEditableOptions { AllowClear = true })
                    )
                </td>
                <td>
                    ​@Html.XEditable(item, i => i.DeadlineDate, i => i.PriorityId, Url.Action("UpdatePriority", "Home"), null, null, new XEditableOptions { })
                </td>
                <td>
                    @(  (item.DeadlineTypeId != null)
                        ? Html.XEditable(item, i => i.DeadlineTypeId, i => i.PriorityId, Url.Action("UpdatePriority", "Home"), Url.Action("GetDeadlineTypeList", "Home"), item.DeadlineType.DeadlineTypeName, new XEditableOptions { AllowClear = true })
                        : Html.XEditable(item, i => i.DeadlineTypeId, i => i.PriorityId, Url.Action("UpdatePriority", "Home"), Url.Action("GetDeadlineTypeList", "Home"), null, new XEditableOptions { AllowClear = true })
                    )
                </td>
                <td>
                @*  
                    item: model,
                    =>get EmployeeId,
                    =>get PriorityId to pair with EmployeeId,
                    invoke Action InsertDirectorPriority from Home Controller,
                    List all available Employee,
                    Attach multiple variable to controller,
                    Show name of all selected Employee,
                    OnSave to invoke JS when submit.
                *@
                    @Html.XEditable(item, i => i.DirectorEmployeeGroup.Select(x => x.EmployeeId.ToString()), i => i.PriorityId,
                        Url.Action("InsertDirectorPriority", "Home"), Url.Action("GetEmployeeList", "Home", new { multiple = true }),
                        i => i.DirectorEmployeeGroup.Select(x => x.FullName),
                        new XEditableOptions
                        {
                            XEditableType = XEditableType.Multiple,
                            AllowClear = true,
                            OnSave = "onUpdateDirector"
                        }
                    )
                </td>
                <td>
                    @Html.XEditable(item, i => i.AfmEmployeeGroup.Select(x => x.EmployeeId.ToString()), i => i.PriorityId,
                        Url.Action("InsertAfmPriority", "Home"), Url.Action("GetEmployeeList", "Home", new { multiple = true }),
                        i => i.AfmEmployeeGroup.Select(x => x.FullName),
                        new XEditableOptions
                        {
                            XEditableType = XEditableType.Multiple,
                            AllowClear = true,
                            OnSave = "onUpdateAFM"
                        }
                    )
                </td>
                <td>
                    @Html.XEditable(item, i => i.CorpDevEmployeeGroup.Select(x => x.EmployeeId.ToString()), i => i.PriorityId,
                        Url.Action("InsertCorpDevPriority", "Home"), Url.Action("GetEmployeeList", "Home", new { multiple = true }),
                        i => i.CorpDevEmployeeGroup.Select(x => x.FullName),
                        new XEditableOptions
                        {
                            XEditableType = XEditableType.Multiple,
                            AllowClear = true,
                            OnSave = "onUpdateCorpDev"
                        }
                    )
                </td>
                <td>
                    ​@Html.XEditable(item, i => i.Comment, i => i.PriorityId, Url.Action("UpdatePriority", "Home"), null, null, new XEditableOptions { })
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts{
    <script>
        console.log('123');
        $('#header-row').on('button', function () {
            alert("aaa");
        });
    </script>
}
<script>
    var onChange = function () {
        LoadPartialView();
    }

    var onUpdateAFM = function () {
        LoadAFMView();
    }

    var onUpdateDirector = function () {
        LoadDirectorView();
    }

    var onUpdateCorpDev = function () {
        LoadCorpDevView();
    }
</script>



